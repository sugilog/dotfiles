""""""""""""""""""""""""""""""""""""""""""""""""""
""" basic settings
""""""""""""""""""""""""""""""""""""""""""""""""""
set runtimepath=~/.vimperator
source ~/.vimperatorrc.local
colorscheme solarized

""""""""""""""""""""""""""""""""""""""""""""""""""
""" bell options
""""""""""""""""""""""""""""""""""""""""""""""""""
set noerrorbells
set novisualbell

""""""""""""""""""""""""""""""""""""""""""""""""""
""" gui options
""""""""""""""""""""""""""""""""""""""""""""""""""
set titlestring="Firefox"
# when use nagios checker use status-4-evar
set toolbars=tabs,nobookmarks,nomenu,nonavigation
set focuscontent


""""""""""""""""""""""""""""""""""""""""""""""""""
""" hint options
""""""""""""""""""""""""""""""""""""""""""""""""""
set hintchars=HJKLASDFG
set hintinputs=label,name,value


""""""""""""""""""""""""""""""""""""""""""""""""""
""" auto complete
""""""""""""""""""""""""""""""""""""""""""""""""""
set complete=slt
set ignorecase


""""""""""""""""""""""""""""""""""""""""""""""""""
""" keymap
""""""""""""""""""""""""""""""""""""""""""""""""""
style -name commandline-ime chrome://* #liberator-commandline-command input {ime-mode: inactive;}
map <C-b> :bmarks!
map <C-h> :history!

" next link
set nextpattern=\bnext\b,\bmore\b,^next$,^次(の)?ページ,\b次.*,^次へ$,→\b,^>$,^(>>|≫)$,^(>|≫),(>|≫)$
set previouspattern=\bprev|previous\b,^prev$,^前(の)?ページ,\b前.*,^前へ$,\b←,^<$,^(<<|≪)$,^(<|≪),(<|≪)$

map <S-e> :tabgroups switch<SPACE>

""""""""""""""""""""""""""""""""""""""""""""""""""
""" plugin settings
""" https://github.com/sugilog/websearch.vimpr
"" websearch.js
""" https://github.com/vimpr/vimperator-plugins
"" _libly.js
"" _smooziee.js
"" copy.js
""" https://github.com/caisui/vimperator
"" optionSelector.js
""""""""""""""""""""""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""""""""""""""""""""""
""" websearch.js custom templates
"" see: http://d.hatena.ne.jp/sugilog/20110328/1301326210
""""""""""""""""""""""""""""""""""""""""""""""""""
javascript <<EOF
var templates = [
  { names: ['gems'], description: 'search rubygems.org', url: 'http://rubygems.org/search?utf8=%E2%9C%93&query=%KEYWORD%' },
  { names: ['codic'], description: 'search programming terms', url: 'http://codic.jp/search?q=%KEYWORD%' },
  { names: ['rurima'], description: 'search manual on ruby reference manual search', url: 'http://doc.ruby-lang.org/ja/search/query:%KEYWORD%/' },
  { names: ['weblio'], description: 'search on weblio en-js', url: 'http://ejje.weblio.jp/content_find/contains/0/%KEYWORD%' },
  { names: ["apidock", "rails"], description: "search rails api on apidock",  url: "http://apidock.com/rails/search?query=%KEYWORD%" },
  { names: ["mvn"], description: "search on maven central repository", url: "http://search.maven.org/#search|ga|1|%KEYWORD%" }
];
if (liberator.globalVariables.webSearchTemplates) {
  liberator.globalVariables.webSearchTemplates = liberator.globalVariables.webSearchTemplates.concat(templates);
}
else {
  liberator.globalVariables.webSearchTemplates = templates;
}
EOF


""""""""""""""""""""""""""""""""""""""""""""""""""
""" copy.js custom templates with goo.gl
"" see: http://d.hatena.ne.jp/sugilog/20110321/1300721545
"" see: http://code.google.com/apis/urlshortener/v1/getting_started.html
""""""""""""""""""""""""""""""""""""""""""""""""""
javascript <<EOF
liberator.globalVariables.copy_templates = [
  {
    label: 'goo.gl',
    value: 'copy url with goo.gl',
    custom: function() {
      return getShortUrl();
    }
  },
  {
    label: 'goo.gl with title',
    value: 'copy title&url with goo.gl',
    custom: function() {
      var title = content.document.title;
      return title + "\n" + getShortUrl();
    }
  },
  {
    label: 'goo.gl4hatena',
    value: 'copy title&url with goo.gl for hatena syntax',
    custom: function() {
      var title = content.document.title;
      return "[" + getShortUrl() + ":title=" + title + "]";
    }
  }
];

var getShortUrl = function() {
  var longUrl = content.document.location.href;

  var googl = {
    'url' : 'https://www.googleapis.com/urlshortener/v1/url?key=',
    'key' : 'AIzaSyCORobP0P0kONa63b4FFuJGqlPlo9pHkjs',
    'method' : 'POST',
    'contentType' : 'application/json',
    'longJson' : '{ "longUrl" : "' + longUrl + '" }'
  };

  var request = new XMLHttpRequest();
  request.open(googl.method, googl.url + googl.key, false);
  request.setRequestHeader('Content-Type', googl.contentType);
  request.send(googl.longJson);

  return JSON.parse(request.responseText).id;
};
EOF

